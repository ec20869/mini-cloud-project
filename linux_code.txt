# Install PIP
sudo apt update -y
sudo apt install python3-pip

# Install REST Service
pip3 install Flask

# Install other libraries
pip3 install pyjwt
pip3 install requests
pip3 install requests-cache

# Set Up my SQL
sudo apt-get install mysql-client

# Install SQL connectors
sudo apt-get install unixodbc-dev
pip3 install pyodbc
pip3 install mysql-connector-python

# Install docker, nginx and gcc
sudo apt update
sudo apt install docker.io
sudo apt-get update
sudo docker run -d -p 80:80 nginx
sudo docker pull nginx
sudo apt-get install gcc

# Set up Git Repo
git init
git clone https://github.com/ec20869/mini-cloud-project

# Create a new working directory
cd mini-cloud-project

# Build the docker image
sudo docker build -t christadobson/music-cloud-project:v1 .
	
# Run the docker image
sudo docker run -p 80:80 christadobson/music-cloud-project:v1

# Find docker image id
sudo docker images

# Tag docker image correctly
sudo docker tag 47756eed25f7 christadobson/music-cloud-project:v1

# Docker Login
sudo docker login

# Push image to registery
sudo docker push christadobson/music-cloud-project:v1

# Start the container from image
sudo docker container run -d -it --name music christadobson/music-cloud-project:v1

# Install Kubernetes
sudo apt update -y
sudo apt install docker.io -y
sudo snap install microk8s --classic 
sudo apt-get update

# Build POD from Manifest file
sudo nano create-musicpod.yml

# Add content to yaml file
apiVersion: v1
kind: Pod
metadata:
   name: music-pod
spec:
   containers:
   - name: music-container01
     image: christadobson/music-cloud-project:v1
     ports:
     - containerPort: 6379

# Create POD from Manifest file
# sudo microk8s kubectl create -f create-musicpod.yml

# Check it is running
sudo microk8s kubectl get all

# Create a deployment
sudo microk8s kubectl create deployment music --image=christadobson/music-cloud-project:v1 --port=80

# Create a load balancer
sudo microk8s kubectl expose deployment music --type=LoadBalancer --port 80 --target-port 80

# Scale the deployment
sudo microk8s kubectl scale deployment music --replicas=3

# Delete statments if needed
sudo microk8s kubectl delete deployment music
sudo microk8s kubectl delete service music
rm -r cloud_computing


sudo microk8s kubectl get pods -l app=music
sudo microk8s kubectl get pods -l app=hostnames \
    -o go-template='{{range .items}}{{.status.podIP}}{{"\n"}}{{end}}'
	
sudo microk8s kubectl get svc

